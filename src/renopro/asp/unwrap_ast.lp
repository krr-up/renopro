% Rules to unwrap tagged AST facts for next step of transformation.

#program always.
string(X0,X1) :- 'final(string(X0,X1)).
number(X0,X1) :- 'final(number(X0,X1)).
variable(X0,X1) :- 'final(variable(X0,X1)).
unary_operation(X0,X1,X2) :- 'final(unary_operation(X0,X1,X2)).
binary_operation(X0,X1,X2,X3) :- 'final(binary_operation(X0,X1,X2,X3)).
interval(X0,X1,X2) :- 'final(interval(X0,X1,X2)).
terms(X0,X1,X2) :- 'final(terms(X0,X1,X2)).
function(X0,X1,X2) :- 'final(function(X0,X1,X2)).
external_function(X0,X1,X2) :- 'final(external_function(X0,X1,X2)).
pool(X0,X1) :- 'final(pool(X0,X1)).
theory_terms(X0,X1,X2) :- 'final(theory_terms(X0,X1,X2)).
theory_sequence(X0,X1,X2) :- 'final(theory_sequence(X0,X1,X2)).
theory_function(X0,X1,X2) :- 'final(theory_function(X0,X1,X2)).
theory_operators(X0,X1,X2) :- 'final(theory_operators(X0,X1,X2)).
theory_unparsed_term_elements(X0,X1,X2,X3) :- 'final(theory_unparsed_term_elements(X0,X1,X2,X3)).
theory_unparsed_term(X0,X1) :- 'final(theory_unparsed_term(X0,X1)).
guard(X0,X1,X2) :- 'final(guard(X0,X1,X2)).
guards(X0,X1,X2) :- 'final(guards(X0,X1,X2)).
comparison(X0,X1,X2) :- 'final(comparison(X0,X1,X2)).
boolean_constant(X0,X1) :- 'final(boolean_constant(X0,X1)).
symbolic_atom(X0,X1) :- 'final(symbolic_atom(X0,X1)).
literal(X0,X1,X2) :- 'final(literal(X0,X1,X2)).
literals(X0,X1,X2) :- 'final(literals(X0,X1,X2)).
conditional_literal(X0,X1,X2) :- 'final(conditional_literal(X0,X1,X2)).
aggregate_elements(X0,X1,X2) :- 'final(aggregate_elements(X0,X1,X2)).
aggregate(X0,X1,X2,X3) :- 'final(aggregate(X0,X1,X2,X3)).
theory_atom_elements(X0,X1,X2,X3) :- 'final(theory_atom_elements(X0,X1,X2,X3)).
theory_guard(X0,X1,X2) :- 'final(theory_guard(X0,X1,X2)).
theory_atom(X0,X1,X2,X3) :- 'final(theory_atom(X0,X1,X2,X3)).
body_aggregate_elements(X0,X1,X2,X3) :- 'final(body_aggregate_elements(X0,X1,X2,X3)).
body_aggregate(X0,X1,X2,X3,X4) :- 'final(body_aggregate(X0,X1,X2,X3,X4)).
body_literal(X0,X1,X2) :- 'final(body_literal(X0,X1,X2)).
body_literals(X0,X1,X2) :- 'final(body_literals(X0,X1,X2)).
head_aggregate_elements(X0,X1,X2,X3) :- 'final(head_aggregate_elements(X0,X1,X2,X3)).
head_aggregate(X0,X1,X2,X3,X4) :- 'final(head_aggregate(X0,X1,X2,X3,X4)).
conditional_literals(X0,X1,X2) :- 'final(conditional_literals(X0,X1,X2)).
disjunction(X0,X1) :- 'final(disjunction(X0,X1)).
rule(X0,X1,X2) :- 'final(rule(X0,X1,X2)).
definition(X0,X1,X2,X3) :- 'final(definition(X0,X1,X2,X3)).
show_signature(X0,X1,X2,X3) :- 'final(show_signature(X0,X1,X2,X3)).
defined(X0,X1,X2,X3) :- 'final(defined(X0,X1,X2,X3)).
show_term(X0,X1,X2) :- 'final(show_term(X0,X1,X2)).
minimize(X0,X1,X2,X3,X4) :- 'final(minimize(X0,X1,X2,X3,X4)).
script(X0,X1,X2) :- 'final(script(X0,X1,X2)).
statements(X0,X1,X2) :- 'final(statements(X0,X1,X2)).
constants(X0,X1,X2) :- 'final(constants(X0,X1,X2)).
program(X0,X1,X2,X3) :- 'final(program(X0,X1,X2,X3)).
external(X0,X1,X2,X3) :- 'final(external(X0,X1,X2,X3)).
edge(X0,X1,X2,X3) :- 'final(edge(X0,X1,X2,X3)).
heuristic(X0,X1,X2,X3,X4,X5) :- 'final(heuristic(X0,X1,X2,X3,X4,X5)).
project_atom(X0,X1,X2) :- 'final(project_atom(X0,X1,X2)).
project_signature(X0,X1,X2,X3) :- 'final(project_signature(X0,X1,X2,X3)).
theory_operator_definitions(X0,X1,X2,X3,X4) :- 'final(theory_operator_definitions(X0,X1,X2,X3,X4)).
theory_term_definitions(X0,X1,X2,X3) :- 'final(theory_term_definitions(X0,X1,X2,X3)).
theory_guard_definition(X0,X1,X2) :- 'final(theory_guard_definition(X0,X1,X2)).
theory_atom_definitions(X0,X1,X2,X3,X4,X5,X6) :- 'final(theory_atom_definitions(X0,X1,X2,X3,X4,X5,X6)).
theory_definition(X0,X1,X2,X3) :- 'final(theory_definition(X0,X1,X2,X3)).
comment(X0,X1,X2) :- 'final(comment(X0,X1,X2)).
location(X0,X1,X2) :- 'final(location(X0,X1,X2)).
child(X0,X1) :- 'final(child(X0,X1)).
