% map ast facts to their identifiers.

transformed_ast_fact2id(string(X0,X1),string(X0)) :- transformed(string(X0,X1)).
transformed_ast_fact2id(number(X0,X1),number(X0)) :- transformed(number(X0,X1)).
transformed_ast_fact2id(variable(X0,X1),variable(X0)) :- transformed(variable(X0,X1)).
transformed_ast_fact2id(unary_operation(X0,X1,X2),unary_operation(X0)) :- transformed(unary_operation(X0,X1,X2)).
transformed_ast_fact2id(binary_operation(X0,X1,X2,X3),binary_operation(X0)) :- transformed(binary_operation(X0,X1,X2,X3)).
transformed_ast_fact2id(interval(X0,X1,X2),interval(X0)) :- transformed(interval(X0,X1,X2)).
transformed_ast_fact2id(terms(X0,X1,X2),terms(X0)) :- transformed(terms(X0,X1,X2)).
transformed_ast_fact2id(function(X0,X1,X2),function(X0)) :- transformed(function(X0,X1,X2)).
transformed_ast_fact2id(external_function(X0,X1,X2),external_function(X0)) :- transformed(external_function(X0,X1,X2)).
transformed_ast_fact2id(pool(X0,X1),pool(X0)) :- transformed(pool(X0,X1)).
transformed_ast_fact2id(theory_terms(X0,X1,X2),theory_terms(X0)) :- transformed(theory_terms(X0,X1,X2)).
transformed_ast_fact2id(theory_sequence(X0,X1,X2),theory_sequence(X0)) :- transformed(theory_sequence(X0,X1,X2)).
transformed_ast_fact2id(theory_function(X0,X1,X2),theory_function(X0)) :- transformed(theory_function(X0,X1,X2)).
transformed_ast_fact2id(theory_operators(X0,X1,X2),theory_operators(X0)) :- transformed(theory_operators(X0,X1,X2)).
transformed_ast_fact2id(theory_unparsed_term_elements(X0,X1,X2,X3),theory_unparsed_term_elements(X0)) :- transformed(theory_unparsed_term_elements(X0,X1,X2,X3)).
transformed_ast_fact2id(theory_unparsed_term(X0,X1),theory_unparsed_term(X0)) :- transformed(theory_unparsed_term(X0,X1)).
transformed_ast_fact2id(guard(X0,X1,X2),guard(X0)) :- transformed(guard(X0,X1,X2)).
transformed_ast_fact2id(guards(X0,X1,X2),guards(X0)) :- transformed(guards(X0,X1,X2)).
transformed_ast_fact2id(comparison(X0,X1,X2),comparison(X0)) :- transformed(comparison(X0,X1,X2)).
transformed_ast_fact2id(boolean_constant(X0,X1),boolean_constant(X0)) :- transformed(boolean_constant(X0,X1)).
transformed_ast_fact2id(symbolic_atom(X0,X1),symbolic_atom(X0)) :- transformed(symbolic_atom(X0,X1)).
transformed_ast_fact2id(literal(X0,X1,X2),literal(X0)) :- transformed(literal(X0,X1,X2)).
transformed_ast_fact2id(literals(X0,X1,X2),literals(X0)) :- transformed(literals(X0,X1,X2)).
transformed_ast_fact2id(conditional_literal(X0,X1,X2),conditional_literal(X0)) :- transformed(conditional_literal(X0,X1,X2)).
transformed_ast_fact2id(aggregate_elements(X0,X1,X2),aggregate_elements(X0)) :- transformed(aggregate_elements(X0,X1,X2)).
transformed_ast_fact2id(aggregate(X0,X1,X2,X3),aggregate(X0)) :- transformed(aggregate(X0,X1,X2,X3)).
transformed_ast_fact2id(theory_atom_elements(X0,X1,X2,X3),theory_atom_elements(X0)) :- transformed(theory_atom_elements(X0,X1,X2,X3)).
transformed_ast_fact2id(theory_guard(X0,X1,X2),theory_guard(X0)) :- transformed(theory_guard(X0,X1,X2)).
transformed_ast_fact2id(theory_atom(X0,X1,X2,X3),theory_atom(X0)) :- transformed(theory_atom(X0,X1,X2,X3)).
transformed_ast_fact2id(body_aggregate_elements(X0,X1,X2,X3),body_aggregate_elements(X0)) :- transformed(body_aggregate_elements(X0,X1,X2,X3)).
transformed_ast_fact2id(body_aggregate(X0,X1,X2,X3,X4),body_aggregate(X0)) :- transformed(body_aggregate(X0,X1,X2,X3,X4)).
transformed_ast_fact2id(body_literal(X0,X1,X2),body_literal(X0)) :- transformed(body_literal(X0,X1,X2)).
transformed_ast_fact2id(body_literals(X0,X1,X2),body_literals(X0)) :- transformed(body_literals(X0,X1,X2)).
transformed_ast_fact2id(head_aggregate_elements(X0,X1,X2,X3),head_aggregate_elements(X0)) :- transformed(head_aggregate_elements(X0,X1,X2,X3)).
transformed_ast_fact2id(head_aggregate(X0,X1,X2,X3,X4),head_aggregate(X0)) :- transformed(head_aggregate(X0,X1,X2,X3,X4)).
transformed_ast_fact2id(conditional_literals(X0,X1,X2),conditional_literals(X0)) :- transformed(conditional_literals(X0,X1,X2)).
transformed_ast_fact2id(disjunction(X0,X1),disjunction(X0)) :- transformed(disjunction(X0,X1)).
transformed_ast_fact2id(rule(X0,X1,X2),rule(X0)) :- transformed(rule(X0,X1,X2)).
transformed_ast_fact2id(definition(X0,X1,X2,X3),definition(X0)) :- transformed(definition(X0,X1,X2,X3)).
transformed_ast_fact2id(show_signature(X0,X1,X2,X3),show_signature(X0)) :- transformed(show_signature(X0,X1,X2,X3)).
transformed_ast_fact2id(defined(X0,X1,X2,X3),defined(X0)) :- transformed(defined(X0,X1,X2,X3)).
transformed_ast_fact2id(show_term(X0,X1,X2),show_term(X0)) :- transformed(show_term(X0,X1,X2)).
transformed_ast_fact2id(minimize(X0,X1,X2,X3,X4),minimize(X0)) :- transformed(minimize(X0,X1,X2,X3,X4)).
transformed_ast_fact2id(script(X0,X1,X2),script(X0)) :- transformed(script(X0,X1,X2)).
transformed_ast_fact2id(statements(X0,X1,X2),statements(X0)) :- transformed(statements(X0,X1,X2)).
transformed_ast_fact2id(constants(X0,X1,X2),constants(X0)) :- transformed(constants(X0,X1,X2)).
transformed_ast_fact2id(program(X0,X1,X2,X3),program(X0)) :- transformed(program(X0,X1,X2,X3)).
transformed_ast_fact2id(external(X0,X1,X2,X3),external(X0)) :- transformed(external(X0,X1,X2,X3)).
transformed_ast_fact2id(edge(X0,X1,X2,X3),edge(X0)) :- transformed(edge(X0,X1,X2,X3)).
transformed_ast_fact2id(heuristic(X0,X1,X2,X3,X4,X5),heuristic(X0)) :- transformed(heuristic(X0,X1,X2,X3,X4,X5)).
transformed_ast_fact2id(project_atom(X0,X1,X2),project_atom(X0)) :- transformed(project_atom(X0,X1,X2)).
transformed_ast_fact2id(project_signature(X0,X1,X2,X3),project_signature(X0)) :- transformed(project_signature(X0,X1,X2,X3)).
transformed_ast_fact2id(theory_operator_definitions(X0,X1,X2,X3,X4),theory_operator_definitions(X0)) :- transformed(theory_operator_definitions(X0,X1,X2,X3,X4)).
transformed_ast_fact2id(theory_term_definitions(X0,X1,X2,X3),theory_term_definitions(X0)) :- transformed(theory_term_definitions(X0,X1,X2,X3)).
transformed_ast_fact2id(theory_guard_definition(X0,X1,X2),theory_guard_definition(X0)) :- transformed(theory_guard_definition(X0,X1,X2)).
transformed_ast_fact2id(theory_atom_definitions(X0,X1,X2,X3,X4,X5,X6),theory_atom_definitions(X0)) :- transformed(theory_atom_definitions(X0,X1,X2,X3,X4,X5,X6)).
transformed_ast_fact2id(theory_definition(X0,X1,X2,X3),theory_definition(X0)) :- transformed(theory_definition(X0,X1,X2,X3)).
transformed_ast_fact2id(location(Id,Begin,End),Id) :- transformed(location(Id,Begin,End)).
